/*
Endpoints API

Testing DefaultAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/saviynt/saviynt-api-go-client/endpoint"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_DefaultAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DefaultAPIService CreateDynamicAttributePost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.CreateDynamicAttributePost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService CreateEndpointPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.CreateEndpointPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService CreateEntitlementTypePost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.CreateEntitlementTypePost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService DeleteDynamicAttributeDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.DeleteDynamicAttributeDelete(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService FetchDynamicAttributeGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.FetchDynamicAttributeGet(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService GetEndpointsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.GetEndpointsPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService GetEntitlementTypesentitlementnametestEnt81Get", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.GetEntitlementTypesentitlementnametestEnt81Get(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService UpdateDynamicAttributePut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.UpdateDynamicAttributePut(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService UpdateEndpointPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.UpdateEndpointPut(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService UpdateEntitlementTypePut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.EndPointAPI.UpdateEntitlementTypePut(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
