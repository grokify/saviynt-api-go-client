/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the GetConnectionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConnectionsRequest{}

// GetConnectionsRequest struct for GetConnectionsRequest
type GetConnectionsRequest struct {
	Connectionname *string `json:"connectionname,omitempty"`
	Connectiontype *string `json:"connectiontype,omitempty"`
	Max *string `json:"max,omitempty"`
	Offset *string `json:"offset,omitempty"`
}

// NewGetConnectionsRequest instantiates a new GetConnectionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectionsRequest() *GetConnectionsRequest {
	this := GetConnectionsRequest{}
	return &this
}

// NewGetConnectionsRequestWithDefaults instantiates a new GetConnectionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectionsRequestWithDefaults() *GetConnectionsRequest {
	this := GetConnectionsRequest{}
	return &this
}

// GetConnectionname returns the Connectionname field value if set, zero value otherwise.
func (o *GetConnectionsRequest) GetConnectionname() string {
	if o == nil || IsNil(o.Connectionname) {
		var ret string
		return ret
	}
	return *o.Connectionname
}

// GetConnectionnameOk returns a tuple with the Connectionname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsRequest) GetConnectionnameOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionname) {
		return nil, false
	}
	return o.Connectionname, true
}

// HasConnectionname returns a boolean if a field has been set.
func (o *GetConnectionsRequest) HasConnectionname() bool {
	if o != nil && !IsNil(o.Connectionname) {
		return true
	}

	return false
}

// SetConnectionname gets a reference to the given string and assigns it to the Connectionname field.
func (o *GetConnectionsRequest) SetConnectionname(v string) {
	o.Connectionname = &v
}

// GetConnectiontype returns the Connectiontype field value if set, zero value otherwise.
func (o *GetConnectionsRequest) GetConnectiontype() string {
	if o == nil || IsNil(o.Connectiontype) {
		var ret string
		return ret
	}
	return *o.Connectiontype
}

// GetConnectiontypeOk returns a tuple with the Connectiontype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsRequest) GetConnectiontypeOk() (*string, bool) {
	if o == nil || IsNil(o.Connectiontype) {
		return nil, false
	}
	return o.Connectiontype, true
}

// HasConnectiontype returns a boolean if a field has been set.
func (o *GetConnectionsRequest) HasConnectiontype() bool {
	if o != nil && !IsNil(o.Connectiontype) {
		return true
	}

	return false
}

// SetConnectiontype gets a reference to the given string and assigns it to the Connectiontype field.
func (o *GetConnectionsRequest) SetConnectiontype(v string) {
	o.Connectiontype = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetConnectionsRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetConnectionsRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *GetConnectionsRequest) SetMax(v string) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetConnectionsRequest) GetOffset() string {
	if o == nil || IsNil(o.Offset) {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsRequest) GetOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetConnectionsRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *GetConnectionsRequest) SetOffset(v string) {
	o.Offset = &v
}

func (o GetConnectionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConnectionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Connectionname) {
		toSerialize["connectionname"] = o.Connectionname
	}
	if !IsNil(o.Connectiontype) {
		toSerialize["connectiontype"] = o.Connectiontype
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

type NullableGetConnectionsRequest struct {
	value *GetConnectionsRequest
	isSet bool
}

func (v NullableGetConnectionsRequest) Get() *GetConnectionsRequest {
	return v.value
}

func (v *NullableGetConnectionsRequest) Set(val *GetConnectionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectionsRequest(val *GetConnectionsRequest) *NullableGetConnectionsRequest {
	return &NullableGetConnectionsRequest{value: val, isSet: true}
}

func (v NullableGetConnectionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


